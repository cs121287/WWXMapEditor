<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Core colors (light counterparts of DarkTheme) -->
    <Color x:Key="BackgroundColor">#FFF5F5F0</Color>
    <!-- very light gray with blue tint -->
    <Color x:Key="SurfaceColor">#FFEDEBE7</Color>
    <!-- base panel (light) -->
    <Color x:Key="Surface2Color">#FFE7E4DF</Color>
    <!-- secondary panel (slightly darker) -->
    <Color x:Key="Surface3Color">#FFF0F0F0</Color>
    <!-- slab/light card -->
    <Color x:Key="BorderColor">#FFCBD6E2</Color>
    <!-- neutral app border -->
    <Color x:Key="ForegroundColor">#FF0E1822</Color>
    <!-- primary text (dark) -->
    <Color x:Key="ForegroundSecondaryColor">#FF4B5A6B</Color>

    <!-- Accent: keep Main Menu pale green highlight available via MenuHighlightBrush; generic Accent stays blue-safe -->
    <Color x:Key="AccentColor">#FF0A84FF</Color>

    <!-- Hover/Pressed tints for light theme (dark overlays) -->
    <Color x:Key="HoverColor">#1A000000</Color>
    <!-- ~10% black -->
    <Color x:Key="PressedColor">#33000000</Color>
    <!-- ~20% black -->

    <!-- Light/divider lines (inverted: dark lines on light surfaces) -->
    <Color x:Key="LightBorderColor">#66000000</Color>
    <!-- 40% black -->
    <Color x:Key="DividerStrongColor">#33000000</Color>
    <!-- 20% black -->
    <Color x:Key="DividerSoftColor">#22000000</Color>
    <!-- 13% black -->

    <!-- Aurora/neon aligned with Main Menu -->
    <Color x:Key="NeonShadowColor">#FF00E58A</Color>
    <Color x:Key="Aurora1">#4400E58A</Color>
    <Color x:Key="Aurora2">#4420A4FF</Color>
    <Color x:Key="Aurora3">#44B770FF</Color>

    <!-- Brushes from colors -->
    <SolidColorBrush x:Key="BackgroundBrush" Color="{StaticResource BackgroundColor}"/>
    <SolidColorBrush x:Key="SurfaceBrush" Color="{StaticResource SurfaceColor}"/>
    <SolidColorBrush x:Key="Surface2Brush" Color="{StaticResource Surface2Color}"/>
    <SolidColorBrush x:Key="Surface3Brush" Color="{StaticResource Surface3Color}"/>
    <SolidColorBrush x:Key="BorderBrush" Color="{StaticResource BorderColor}"/>

    <SolidColorBrush x:Key="ForegroundBrush" Color="{StaticResource ForegroundColor}"/>
    <SolidColorBrush x:Key="ForegroundSecondaryBrush" Color="{StaticResource ForegroundSecondaryColor}"/>

    <SolidColorBrush x:Key="AccentBrush" Color="{StaticResource AccentColor}"/>
    <SolidColorBrush x:Key="HoverBrush" Color="{StaticResource HoverColor}"/>
    <SolidColorBrush x:Key="PressedBrush" Color="{StaticResource PressedColor}"/>

    <!-- Extra brushes used by the main menu visuals -->
    <SolidColorBrush x:Key="LightBorderBrush" Color="{StaticResource LightBorderColor}"/>
    <SolidColorBrush x:Key="DividerStrongBrush" Color="{StaticResource DividerStrongColor}"/>
    <SolidColorBrush x:Key="DividerSoftBrush" Color="{StaticResource DividerSoftColor}"/>

    <!-- Pale-green selection fill (same feel as DarkTheme/MainMenu) -->
    <SolidColorBrush x:Key="MenuHighlightBrush" Color="#CFE3B0" Opacity="0.28"/>

    <!-- Optional solid aurora brushes -->
    <SolidColorBrush x:Key="Aurora1Brush" Color="{StaticResource Aurora1}"/>
    <SolidColorBrush x:Key="Aurora2Brush" Color="{StaticResource Aurora2}"/>
    <SolidColorBrush x:Key="Aurora3Brush" Color="{StaticResource Aurora3}"/>

    <!-- Neon gradient accent (matches DarkTheme for consistency) -->
    <LinearGradientBrush x:Key="NeonBorderBrush" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Color="#FF00E58A" Offset="0"/>
        <GradientStop Color="#FF20A4FF" Offset="1"/>
    </LinearGradientBrush>

    <!-- Image assets used by the main menu (slat mask + tiled selection texture)
         Ensure these exist:
         - Resources/Images/MainMenu/overlays/slat_mask.png
         - Resources/Images/MainMenu/overlays/selection_texture.png
         Build Action = Resource
    -->
    <ImageBrush x:Key="SlatOpacityMaskBrush"
                ImageSource="pack://application:,,,/Resources/Images/MainMenu/overlays/slat_mask.png"
                Stretch="Fill"/>

    <!-- Tile small noise so it stays crisp at any size -->
    <ImageBrush x:Key="SelectionTextureBrush"
                ImageSource="pack://application:,,,/Resources/Images/MainMenu/overlays/selection_texture.png"
                TileMode="Tile"
                ViewportUnits="Absolute"
                Viewport="0,0,24,24"
                Stretch="Fill"/>

    <!-- Base button style (light): minimal and safe to BasedOn -->
    <Style x:Key="MenuButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="Background" Value="{DynamicResource Surface3Brush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource LightBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="12,6"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Surface2Brush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PressedBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>