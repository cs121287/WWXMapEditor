<UserControl x:Class="WWXMapEditor.Views.NewMapSteps.PlayerSelectStepView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:WWXMapEditor.Views.NewMapSteps"
             xmlns:scaling="clr-namespace:WWXMapEditor.UI.Scaling"
             xmlns:conv="clr-namespace:WWXMapEditor.Converters"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d"
             d:DesignHeight="800" d:DesignWidth="1200">

    <UserControl.Resources>
        <!-- Converters -->
        <conv:MultiplyConverter x:Key="MultiplyConverter"/>
        <conv:IntComparisonConverter x:Key="IntComparisonConverter"/>
        <conv:UniqueCountryListConverter x:Key="UniqueCountryListConverter"/>
        <conv:CountryAvailabilityConverter x:Key="CountryAvailabilityConverter"/>
        <conv:CountryClaimedByConverter x:Key="CountryClaimedByConverter"/>

        <!-- Section header styles -->
        <Style x:Key="SectionKicker" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{DynamicResource AccentBrush}"/>
            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Opacity" Value="0.95"/>
        </Style>
        <Style x:Key="SectionSub" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{DynamicResource ForegroundSecondaryBrush}"/>
            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="Opacity" Value="0.9"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>

        <!-- Card style -->
        <Style x:Key="CardBorderStyle" TargetType="Border">
            <Setter Property="Background" Value="{DynamicResource Surface3Brush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="CornerRadius" Value="10"/>
            <Setter Property="Padding" Value="20"/>
            <Setter Property="Margin" Value="0,0,0,15"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="{DynamicResource ShadowColor}" Direction="270" ShadowDepth="3" Opacity="0.22" BlurRadius="10"/>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Country list -->
        <x:Array x:Key="CountryOptions" Type="{x:Type sys:String}">
            <sys:String>Random</sys:String>
            <sys:String>Redonia</sys:String>
            <sys:String>Sevaria</sys:String>
            <sys:String>Auria</sys:String>
            <sys:String>Maritain</sys:String>
            <sys:String>Norvos</sys:String>
            <sys:String>Valtro</sys:String>
        </x:Array>

        <!-- Flag swatch mapping -->
        <Style x:Key="FlagSwatchFillStyle" TargetType="Border">
            <Setter Property="Background" Value="{x:Null}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding}" Value="Redonia">
                    <Setter Property="Background" Value="{DynamicResource CountryRedoniaBrush}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding}" Value="Sevaria">
                    <Setter Property="Background" Value="{DynamicResource CountrySevariaBrush}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding}" Value="Auria">
                    <Setter Property="Background" Value="{DynamicResource CountryAuriaBrush}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding}" Value="Maritain">
                    <Setter Property="Background" Value="{DynamicResource CountryMaritainBrush}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding}" Value="Norvos">
                    <Setter Property="Background" Value="{DynamicResource CountryNorvosBrush}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding}" Value="Valtro">
                    <Setter Property="Background" Value="{DynamicResource CountryValtroBrush}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- ListBoxItem template with all visuals and animations (avoids DataTemplate.Triggers entirely) -->
        <Style x:Key="CountryTileContainerBaseStyle" TargetType="ListBoxItem">
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <!-- Root for scale animation -->
                        <Grid x:Name="Root" Width="150" Height="44" Margin="0,6,10,6" RenderTransformOrigin="0.5,0.5">
                            <Grid.RenderTransform>
                                <ScaleTransform x:Name="Scale" ScaleX="1" ScaleY="1"/>
                            </Grid.RenderTransform>

                            <Border x:Name="TileBg"
                                    Background="{DynamicResource Surface2Brush}"
                                    BorderBrush="{DynamicResource BorderBrush}"
                                    BorderThickness="1"
                                    CornerRadius="8">
                                <Border.Effect>
                                    <DropShadowEffect Color="{DynamicResource ShadowColor}" BlurRadius="6" ShadowDepth="1" Opacity="0.18"/>
                                </Border.Effect>
                            </Border>

                            <!-- Selected fill -->
                            <Border x:Name="SelFill"
                                    CornerRadius="8"
                                    Background="{DynamicResource AccentBrush}"
                                    Opacity="0.18"/>

                            <Grid Margin="10,0,8,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <!-- Swatch (DataContext is the bound country string) -->
                                <Border Grid.Column="0"
                                        Width="16" Height="16" CornerRadius="3"
                                        BorderBrush="{DynamicResource BorderBrush}"
                                        BorderThickness="1" Margin="0,0,8,0"
                                        Style="{StaticResource FlagSwatchFillStyle}"/>

                                <!-- Country name -->
                                <TextBlock Grid.Column="1"
                                           Text="{TemplateBinding Content}"
                                           VerticalAlignment="Center"
                                           FontFamily="Consolas"
                                           Foreground="{DynamicResource ForegroundBrush}"/>

                                <!-- Taken badge -->
                                <Border x:Name="TakenBadge"
                                        Grid.Column="2"
                                        Background="{DynamicResource Surface3Brush}"
                                        BorderBrush="{DynamicResource BorderBrush}"
                                        BorderThickness="1"
                                        CornerRadius="6"
                                        Padding="6,2"
                                        Visibility="Collapsed"
                                        VerticalAlignment="Center">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="🔒" VerticalAlignment="Center" Opacity="0.9"/>
                                        <TextBlock x:Name="TakenText"
                                                   FontFamily="Consolas"
                                                   Foreground="{DynamicResource ForegroundSecondaryBrush}"
                                                   VerticalAlignment="Center"
                                                   Margin="4,0,0,0"
                                                   Text="Taken"/>
                                    </StackPanel>
                                </Border>
                            </Grid>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <!-- Hover scale -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="Scale" Storyboard.TargetProperty="ScaleX" To="1.03" Duration="0:0:0.10"/>
                                            <DoubleAnimation Storyboard.TargetName="Scale" Storyboard.TargetProperty="ScaleY" To="1.03" Duration="0:0:0.10"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="Scale" Storyboard.TargetProperty="ScaleX" To="1.0" Duration="0:0:0.10"/>
                                            <DoubleAnimation Storyboard.TargetName="Scale" Storyboard.TargetProperty="ScaleY" To="1.0" Duration="0:0:0.10"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>

                            <!-- Selected state -->
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="SelFill" Property="Opacity" Value="0.22"/>
                                <Setter TargetName="TileBg" Property="BorderBrush" Value="{DynamicResource AccentBrush}"/>
                            </Trigger>

                            <!-- Disabled (taken by other) -->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="TakenBadge" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="TileBg" Property="Opacity" Value="0.75"/>
                            </Trigger>

                            <!-- If the item is Random, never show Taken badge -->
                            <Trigger Property="Content" Value="Random">
                                <Setter TargetName="TakenBadge" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Player header -->
        <Style x:Key="PlayerHeader" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin" Value="0,0,0,8"/>
        </Style>

        <!-- Constants -->
        <sys:Int32 x:Key="Players2">2</sys:Int32>
        <sys:Int32 x:Key="Players3">3</sys:Int32>
        <sys:Int32 x:Key="Players4">4</sys:Int32>
    </UserControl.Resources>

    <Grid Margin="12,4,12,4">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="2*" />
        </Grid.ColumnDefinitions>

        <!-- Left Column: Number of Players -->
        <StackPanel Grid.Column="0" Margin="8,0,8,0">
            <Grid Margin="0,0,0,16">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Border Grid.Column="0"
                        Width="56" Height="56"
                        Background="{DynamicResource AccentBrush}"
                        CornerRadius="28"
                        Margin="0,0,12,0">
                    <TextBlock Text="👥"
                               HorizontalAlignment="Center" VerticalAlignment="Center">
                        <TextBlock.FontSize>
                            <Binding Source="{x:Static scaling:ScaleService.Instance}" Path="FontScale"
                                     Converter="{StaticResource MultiplyConverter}" ConverterParameter="26"/>
                        </TextBlock.FontSize>
                    </TextBlock>
                </Border>

                <StackPanel Grid.Column="1" VerticalAlignment="Center">
                    <TextBlock Text="PLAYERS" Style="{StaticResource SectionKicker}">
                        <TextBlock.FontSize>
                            <Binding Source="{x:Static scaling:ScaleService.Instance}" Path="FontScale"
                                     Converter="{StaticResource MultiplyConverter}" ConverterParameter="16"/>
                        </TextBlock.FontSize>
                    </TextBlock>
                    <TextBlock Text="Choose number of participants" Style="{StaticResource SectionSub}">
                        <TextBlock.FontSize>
                            <Binding Source="{x:Static scaling:ScaleService.Instance}" Path="FontScale"
                                     Converter="{StaticResource MultiplyConverter}" ConverterParameter="12"/>
                        </TextBlock.FontSize>
                    </TextBlock>
                </StackPanel>
            </Grid>

            <Border Style="{StaticResource CardBorderStyle}">
                <UniformGrid Rows="1" Columns="3">
                    <!-- 2 -->
                    <RadioButton GroupName="PlayerCount"
                                 Margin="0,0,8,0"
                                 IsChecked="{Binding ParentViewModel.NumberOfPlayers, Converter={StaticResource IntComparisonConverter}, ConverterParameter={StaticResource Players2}}">
                        <RadioButton.Template>
                            <ControlTemplate TargetType="RadioButton">
                                <Border x:Name="border"
                                        Background="{DynamicResource Surface3Brush}"
                                        BorderBrush="{DynamicResource BorderBrush}"
                                        BorderThickness="2"
                                        CornerRadius="10"
                                        Height="50"
                                        Cursor="Hand" Padding="16,0">
                                    <TextBlock Text="2"
                                               Foreground="{DynamicResource ForegroundBrush}"
                                               FontFamily="Consolas"
                                               FontWeight="Bold"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center">
                                        <TextBlock.FontSize>
                                            <Binding Source="{x:Static scaling:ScaleService.Instance}" Path="FontScale"
                                                     Converter="{StaticResource MultiplyConverter}" ConverterParameter="20"/>
                                        </TextBlock.FontSize>
                                    </TextBlock>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter TargetName="border" Property="Background" Value="{DynamicResource AccentBrush}"/>
                                        <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource AccentBrush}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="border" Property="Opacity" Value="0.9"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </RadioButton.Template>
                    </RadioButton>

                    <!-- 3 -->
                    <RadioButton GroupName="PlayerCount"
                                 Margin="0,0,8,0"
                                 IsChecked="{Binding ParentViewModel.NumberOfPlayers, Converter={StaticResource IntComparisonConverter}, ConverterParameter={StaticResource Players3}}">
                        <RadioButton.Template>
                            <ControlTemplate TargetType="RadioButton">
                                <Border x:Name="border"
                                        Background="{DynamicResource Surface3Brush}"
                                        BorderBrush="{DynamicResource BorderBrush}"
                                        BorderThickness="2"
                                        CornerRadius="10"
                                        Height="50"
                                        Cursor="Hand" Padding="16,0">
                                    <TextBlock Text="3"
                                               Foreground="{DynamicResource ForegroundBrush}"
                                               FontFamily="Consolas"
                                               FontWeight="Bold"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center">
                                        <TextBlock.FontSize>
                                            <Binding Source="{x:Static scaling:ScaleService.Instance}" Path="FontScale"
                                                     Converter="{StaticResource MultiplyConverter}" ConverterParameter="20"/>
                                        </TextBlock.FontSize>
                                    </TextBlock>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter TargetName="border" Property="Background" Value="{DynamicResource AccentBrush}"/>
                                        <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource AccentBrush}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="border" Property="Opacity" Value="0.9"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </RadioButton.Template>
                    </RadioButton>

                    <!-- 4 -->
                    <RadioButton GroupName="PlayerCount"
                                 IsChecked="{Binding ParentViewModel.NumberOfPlayers, Converter={StaticResource IntComparisonConverter}, ConverterParameter={StaticResource Players4}}">
                        <RadioButton.Template>
                            <ControlTemplate TargetType="RadioButton">
                                <Border x:Name="border"
                                        Background="{DynamicResource Surface3Brush}"
                                        BorderBrush="{DynamicResource BorderBrush}"
                                        BorderThickness="2"
                                        CornerRadius="10"
                                        Height="50"
                                        Cursor="Hand" Padding="16,0">
                                    <TextBlock Text="4"
                                               Foreground="{DynamicResource ForegroundBrush}"
                                               FontFamily="Consolas"
                                               FontWeight="Bold"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center">
                                        <TextBlock.FontSize>
                                            <Binding Source="{x:Static scaling:ScaleService.Instance}" Path="FontScale"
                                                     Converter="{StaticResource MultiplyConverter}" ConverterParameter="20"/>
                                        </TextBlock.FontSize>
                                    </TextBlock>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter TargetName="border" Property="Background" Value="{DynamicResource AccentBrush}"/>
                                        <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource AccentBrush}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="border" Property="Opacity" Value="0.9"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </RadioButton.Template>
                    </RadioButton>
                </UniformGrid>
            </Border>
        </StackPanel>

        <!-- Divider -->
        <Border Grid.Column="1" Width="1" Margin="12,12" Opacity="0.22"
                Background="{DynamicResource BorderBrush}"/>

        <!-- Right Column: Player Information -->
        <StackPanel Grid.Column="2" Margin="8,0,8,0">
            <Grid Margin="0,0,0,16">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Border Grid.Column="0"
                        Width="56" Height="56"
                        Background="{DynamicResource AccentBrush}"
                        CornerRadius="28"
                        Margin="0,0,12,0">
                    <TextBlock Text="🏳️"
                               HorizontalAlignment="Center" VerticalAlignment="Center">
                        <TextBlock.FontSize>
                            <Binding Source="{x:Static scaling:ScaleService.Instance}" Path="FontScale"
                                     Converter="{StaticResource MultiplyConverter}" ConverterParameter="26"/>
                        </TextBlock.FontSize>
                    </TextBlock>
                </Border>

                <StackPanel Grid.Column="1" VerticalAlignment="Center">
                    <TextBlock Text="PLAYER INFORMATION" Style="{StaticResource SectionKicker}">
                        <TextBlock.FontSize>
                            <Binding Source="{x:Static scaling:ScaleService.Instance}" Path="FontScale"
                                     Converter="{StaticResource MultiplyConverter}" ConverterParameter="16"/>
                        </TextBlock.FontSize>
                    </TextBlock>
                    <TextBlock Text="Assign a country to each player and set alliances"
                               Style="{StaticResource SectionSub}">
                        <TextBlock.FontSize>
                            <Binding Source="{x:Static scaling:ScaleService.Instance}" Path="FontScale"
                                     Converter="{StaticResource MultiplyConverter}" ConverterParameter="12"/>
                        </TextBlock.FontSize>
                    </TextBlock>
                </StackPanel>
            </Grid>

            <!-- Player 1 -->
            <Border Style="{StaticResource CardBorderStyle}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0" Text="Player 1" Style="{StaticResource PlayerHeader}">
                        <TextBlock.FontSize>
                            <Binding Source="{x:Static scaling:ScaleService.Instance}" Path="FontScale"
                                     Converter="{StaticResource MultiplyConverter}" ConverterParameter="13"/>
                        </TextBlock.FontSize>
                    </TextBlock>

                    <ListBox Grid.Column="1"
                             ItemsSource="{StaticResource CountryOptions}"
                             SelectedItem="{Binding ParentViewModel.Player1Country, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                             ScrollViewer.VerticalScrollBarVisibility="Disabled"
                             BorderThickness="0"
                             Background="{x:Null}">
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel />
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        <ListBox.ItemContainerStyle>
                            <Style BasedOn="{StaticResource CountryTileContainerBaseStyle}" TargetType="ListBoxItem">
                                <!-- Disable tiles already chosen by other players (but keep the current selection enabled) -->
                                <Setter Property="IsEnabled">
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource CountryAvailabilityConverter}">
                                            <Binding />
                                            <Binding Path="ParentViewModel.Player1Country"/>
                                            <Binding Path="ParentViewModel.Player2Country"/>
                                            <Binding Path="ParentViewModel.Player3Country"/>
                                            <Binding Path="ParentViewModel.Player4Country"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="ToolTip">
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource CountryClaimedByConverter}">
                                            <Binding />
                                            <Binding Path="ParentViewModel.Player1Country"/>
                                            <Binding Path="ParentViewModel.Player2Country"/>
                                            <Binding Path="ParentViewModel.Player3Country"/>
                                            <Binding Path="ParentViewModel.Player4Country"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListBox.ItemContainerStyle>
                    </ListBox>

                    <Border Grid.Column="2" Width="24" Height="24" CornerRadius="3" BorderThickness="1" BorderBrush="{DynamicResource BorderBrush}" Margin="10,0,0,0" VerticalAlignment="Center">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="Background" Value="{x:Null}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ParentViewModel.Player1Country}" Value="Redonia">
                                        <Setter Property="Background" Value="{DynamicResource CountryRedoniaBrush}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ParentViewModel.Player1Country}" Value="Sevaria">
                                        <Setter Property="Background" Value="{DynamicResource CountrySevariaBrush}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ParentViewModel.Player1Country}" Value="Auria">
                                        <Setter Property="Background" Value="{DynamicResource CountryAuriaBrush}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ParentViewModel.Player1Country}" Value="Maritain">
                                        <Setter Property="Background" Value="{DynamicResource CountryMaritainBrush}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ParentViewModel.Player1Country}" Value="Norvos">
                                        <Setter Property="Background" Value="{DynamicResource CountryNorvosBrush}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ParentViewModel.Player1Country}" Value="Valtro">
                                        <Setter Property="Background" Value="{DynamicResource CountryValtroBrush}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </Grid>
            </Border>

            <!-- Player 2 -->
            <Border Style="{StaticResource CardBorderStyle}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0" Text="Player 2" Style="{StaticResource PlayerHeader}">
                        <TextBlock.FontSize>
                            <Binding Source="{x:Static scaling:ScaleService.Instance}" Path="FontScale"
                                     Converter="{StaticResource MultiplyConverter}" ConverterParameter="13"/>
                        </TextBlock.FontSize>
                    </TextBlock>

                    <ListBox Grid.Column="1"
                             ItemsSource="{StaticResource CountryOptions}"
                             SelectedItem="{Binding ParentViewModel.Player2Country, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                             ScrollViewer.VerticalScrollBarVisibility="Disabled"
                             BorderThickness="0"
                             Background="{x:Null}">
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel />
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        <ListBox.ItemContainerStyle>
                            <Style BasedOn="{StaticResource CountryTileContainerBaseStyle}" TargetType="ListBoxItem">
                                <Setter Property="IsEnabled">
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource CountryAvailabilityConverter}">
                                            <Binding />
                                            <Binding Path="ParentViewModel.Player2Country"/>
                                            <Binding Path="ParentViewModel.Player1Country"/>
                                            <Binding Path="ParentViewModel.Player3Country"/>
                                            <Binding Path="ParentViewModel.Player4Country"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="ToolTip">
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource CountryClaimedByConverter}">
                                            <Binding />
                                            <Binding Path="ParentViewModel.Player1Country"/>
                                            <Binding Path="ParentViewModel.Player2Country"/>
                                            <Binding Path="ParentViewModel.Player3Country"/>
                                            <Binding Path="ParentViewModel.Player4Country"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListBox.ItemContainerStyle>
                    </ListBox>

                    <Border Grid.Column="2" Width="24" Height="24" CornerRadius="3" BorderThickness="1" BorderBrush="{DynamicResource BorderBrush}" Margin="10,0,10,0" VerticalAlignment="Center">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="Background" Value="{x:Null}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ParentViewModel.Player2Country}" Value="Redonia">
                                        <Setter Property="Background" Value="{DynamicResource CountryRedoniaBrush}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ParentViewModel.Player2Country}" Value="Sevaria">
                                        <Setter Property="Background" Value="{DynamicResource CountrySevariaBrush}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ParentViewModel.Player2Country}" Value="Auria">
                                        <Setter Property="Background" Value="{DynamicResource CountryAuriaBrush}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ParentViewModel.Player2Country}" Value="Maritain">
                                        <Setter Property="Background" Value="{DynamicResource CountryMaritainBrush}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ParentViewModel.Player2Country}" Value="Norvos">
                                        <Setter Property="Background" Value="{DynamicResource CountryNorvosBrush}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ParentViewModel.Player2Country}" Value="Valtro">
                                        <Setter Property="Background" Value="{DynamicResource CountryValtroBrush}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>

                    <!-- Alliance toggle -->
                    <CheckBox Grid.Column="3"
                              IsChecked="{Binding ParentViewModel.Player2IsAlly, Mode=TwoWay}"
                              VerticalAlignment="Center"
                              Margin="0,0,10,0">
                        <CheckBox.Template>
                            <ControlTemplate TargetType="CheckBox">
                                <Border x:Name="ToggleBackground"
                                        Width="64" Height="32"
                                        Background="{DynamicResource Surface2Brush}"
                                        CornerRadius="16"
                                        Cursor="Hand">
                                    <Grid>
                                        <Ellipse x:Name="ToggleCircle"
                                                 Width="28" Height="28"
                                                 Fill="{DynamicResource ForegroundBrush}"
                                                 HorizontalAlignment="Left" Margin="2,2,0,2">
                                            <Ellipse.RenderTransform>
                                                <TranslateTransform x:Name="ToggleTransform" X="0"/>
                                            </Ellipse.RenderTransform>
                                            <Ellipse.Effect>
                                                <DropShadowEffect Color="{DynamicResource ShadowColor}" BlurRadius="8" ShadowDepth="1" Opacity="0.35"/>
                                            </Ellipse.Effect>
                                        </Ellipse>
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter TargetName="ToggleBackground" Property="Background" Value="{DynamicResource AccentBrush}"/>
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetName="ToggleTransform" Storyboard.TargetProperty="X" To="32" Duration="0:0:0.18"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetName="ToggleTransform" Storyboard.TargetProperty="X" To="0" Duration="0:0:0.18"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.ExitActions>
                                    </Trigger>
                                    <!-- For 2 players: lock as enemy -->
                                    <DataTrigger Binding="{Binding ParentViewModel.NumberOfPlayers}" Value="2">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </CheckBox.Template>
                    </CheckBox>

                    <TextBlock Grid.Column="4"
                               VerticalAlignment="Center"
                               FontFamily="Consolas"
                               FontWeight="Bold">
                        <TextBlock.FontSize>
                            <Binding Source="{x:Static scaling:ScaleService.Instance}" Path="FontScale"
                                     Converter="{StaticResource MultiplyConverter}" ConverterParameter="12"/>
                        </TextBlock.FontSize>
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Text" Value="Enemy"/>
                                <Setter Property="Foreground" Value="{DynamicResource ForegroundSecondaryBrush}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ParentViewModel.Player2IsAlly}" Value="True">
                                        <Setter Property="Text" Value="Ally"/>
                                        <Setter Property="Foreground" Value="{DynamicResource AccentBrush}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ParentViewModel.NumberOfPlayers}" Value="2">
                                        <Setter Property="Text" Value="Enemy (locked for 2 players)"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>
            </Border>

            <!-- Player 3 -->
            <Border Style="{StaticResource CardBorderStyle}">
                <Grid>
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ParentViewModel.NumberOfPlayers}" Value="3">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ParentViewModel.NumberOfPlayers}" Value="4">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0" Text="Player 3" Style="{StaticResource PlayerHeader}">
                        <TextBlock.FontSize>
                            <Binding Source="{x:Static scaling:ScaleService.Instance}" Path="FontScale"
                                     Converter="{StaticResource MultiplyConverter}" ConverterParameter="13"/>
                        </TextBlock.FontSize>
                    </TextBlock>

                    <ListBox Grid.Column="1"
                             ItemsSource="{StaticResource CountryOptions}"
                             SelectedItem="{Binding ParentViewModel.Player3Country, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                             ScrollViewer.VerticalScrollBarVisibility="Disabled"
                             BorderThickness="0"
                             Background="{x:Null}">
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel />
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        <ListBox.ItemContainerStyle>
                            <Style BasedOn="{StaticResource CountryTileContainerBaseStyle}" TargetType="ListBoxItem">
                                <Setter Property="IsEnabled">
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource CountryAvailabilityConverter}">
                                            <Binding />
                                            <Binding Path="ParentViewModel.Player3Country"/>
                                            <Binding Path="ParentViewModel.Player1Country"/>
                                            <Binding Path="ParentViewModel.Player2Country"/>
                                            <Binding Path="ParentViewModel.Player4Country"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="ToolTip">
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource CountryClaimedByConverter}">
                                            <Binding />
                                            <Binding Path="ParentViewModel.Player1Country"/>
                                            <Binding Path="ParentViewModel.Player2Country"/>
                                            <Binding Path="ParentViewModel.Player3Country"/>
                                            <Binding Path="ParentViewModel.Player4Country"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListBox.ItemContainerStyle>
                    </ListBox>

                    <Border Grid.Column="2" Width="24" Height="24" CornerRadius="3" BorderThickness="1" BorderBrush="{DynamicResource BorderBrush}" Margin="10,0,10,0" VerticalAlignment="Center">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="Background" Value="{x:Null}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ParentViewModel.Player3Country}" Value="Redonia">
                                        <Setter Property="Background" Value="{DynamicResource CountryRedoniaBrush}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ParentViewModel.Player3Country}" Value="Sevaria">
                                        <Setter Property="Background" Value="{DynamicResource CountrySevariaBrush}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ParentViewModel.Player3Country}" Value="Auria">
                                        <Setter Property="Background" Value="{DynamicResource CountryAuriaBrush}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ParentViewModel.Player3Country}" Value="Maritain">
                                        <Setter Property="Background" Value="{DynamicResource CountryMaritainBrush}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ParentViewModel.Player3Country}" Value="Norvos">
                                        <Setter Property="Background" Value="{DynamicResource CountryNorvosBrush}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ParentViewModel.Player3Country}" Value="Valtro">
                                        <Setter Property="Background" Value="{DynamicResource CountryValtroBrush}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>

                    <!-- Alliance toggle -->
                    <CheckBox Grid.Column="3"
                              IsChecked="{Binding ParentViewModel.Player3IsAlly, Mode=TwoWay}"
                              VerticalAlignment="Center"
                              Margin="0,0,10,0">
                        <CheckBox.Template>
                            <ControlTemplate TargetType="CheckBox">
                                <Border x:Name="ToggleBackground"
                                        Width="64" Height="32"
                                        Background="{DynamicResource Surface3Brush}"
                                        CornerRadius="16"
                                        Cursor="Hand">
                                    <Grid>
                                        <Ellipse x:Name="ToggleCircle"
                                                 Width="28" Height="28"
                                                 Fill="{DynamicResource ForegroundBrush}"
                                                 HorizontalAlignment="Left" Margin="2,2,0,2">
                                            <Ellipse.RenderTransform>
                                                <TranslateTransform x:Name="ToggleTransform" X="0"/>
                                            </Ellipse.RenderTransform>
                                            <Ellipse.Effect>
                                                <DropShadowEffect Color="{DynamicResource ShadowColor}" BlurRadius="8" ShadowDepth="1" Opacity="0.35"/>
                                            </Ellipse.Effect>
                                        </Ellipse>
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter TargetName="ToggleBackground" Property="Background" Value="{DynamicResource AccentBrush}"/>
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetName="ToggleTransform" Storyboard.TargetProperty="X" To="32" Duration="0:0:0.18"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetName="ToggleTransform" Storyboard.TargetProperty="X" To="0" Duration="0:0:0.18"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.ExitActions>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </CheckBox.Template>
                    </CheckBox>

                    <TextBlock Grid.Column="4"
                               VerticalAlignment="Center"
                               FontFamily="Consolas"
                               FontWeight="Bold">
                        <TextBlock.FontSize>
                            <Binding Source="{x:Static scaling:ScaleService.Instance}" Path="FontScale"
                                     Converter="{StaticResource MultiplyConverter}" ConverterParameter="12"/>
                        </TextBlock.FontSize>
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Text" Value="Enemy"/>
                                <Setter Property="Foreground" Value="{DynamicResource ForegroundSecondaryBrush}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ParentViewModel.Player3IsAlly}" Value="True">
                                        <Setter Property="Text" Value="Ally"/>
                                        <Setter Property="Foreground" Value="{DynamicResource AccentBrush}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>
            </Border>

            <!-- Player 4 -->
            <Border Style="{StaticResource CardBorderStyle}">
                <Grid>
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ParentViewModel.NumberOfPlayers}" Value="4">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0" Text="Player 4" Style="{StaticResource PlayerHeader}">
                        <TextBlock.FontSize>
                            <Binding Source="{x:Static scaling:ScaleService.Instance}" Path="FontScale"
                                     Converter="{StaticResource MultiplyConverter}" ConverterParameter="13"/>
                        </TextBlock.FontSize>
                    </TextBlock>

                    <ListBox Grid.Column="1"
                             ItemsSource="{StaticResource CountryOptions}"
                             SelectedItem="{Binding ParentViewModel.Player4Country, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                             ScrollViewer.VerticalScrollBarVisibility="Disabled"
                             BorderThickness="0"
                             Background="{x:Null}">
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel />
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        <ListBox.ItemContainerStyle>
                            <Style BasedOn="{StaticResource CountryTileContainerBaseStyle}" TargetType="ListBoxItem">
                                <Setter Property="IsEnabled">
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource CountryAvailabilityConverter}">
                                            <Binding />
                                            <Binding Path="ParentViewModel.Player4Country"/>
                                            <Binding Path="ParentViewModel.Player1Country"/>
                                            <Binding Path="ParentViewModel.Player2Country"/>
                                            <Binding Path="ParentViewModel.Player3Country"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="ToolTip">
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource CountryClaimedByConverter}">
                                            <Binding />
                                            <Binding Path="ParentViewModel.Player1Country"/>
                                            <Binding Path="ParentViewModel.Player2Country"/>
                                            <Binding Path="ParentViewModel.Player3Country"/>
                                            <Binding Path="ParentViewModel.Player4Country"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListBox.ItemContainerStyle>
                    </ListBox>

                    <Border Grid.Column="2" Width="24" Height="24" CornerRadius="3" BorderThickness="1" BorderBrush="{DynamicResource BorderBrush}" Margin="10,0,10,0" VerticalAlignment="Center">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="Background" Value="{x:Null}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ParentViewModel.Player4Country}" Value="Redonia">
                                        <Setter Property="Background" Value="{DynamicResource CountryRedoniaBrush}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ParentViewModel.Player4Country}" Value="Sevaria">
                                        <Setter Property="Background" Value="{DynamicResource CountrySevariaBrush}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ParentViewModel.Player4Country}" Value="Auria">
                                        <Setter Property="Background" Value="{DynamicResource CountryAuriaBrush}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ParentViewModel.Player4Country}" Value="Maritain">
                                        <Setter Property="Background" Value="{DynamicResource CountryMaritainBrush}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ParentViewModel.Player4Country}" Value="Norvos">
                                        <Setter Property="Background" Value="{DynamicResource CountryNorvosBrush}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ParentViewModel.Player4Country}" Value="Valtro">
                                        <Setter Property="Background" Value="{DynamicResource CountryValtroBrush}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>

                    <!-- Alliance toggle -->
                    <CheckBox Grid.Column="3"
                              IsChecked="{Binding ParentViewModel.Player4IsAlly, Mode=TwoWay}"
                              VerticalAlignment="Center"
                              Margin="0,0,10,0">
                        <CheckBox.Template>
                            <ControlTemplate TargetType="CheckBox">
                                <Border x:Name="ToggleBackground"
                                        Width="64" Height="32"
                                        Background="{DynamicResource Surface3Brush}"
                                        CornerRadius="16"
                                        Cursor="Hand">
                                    <Grid>
                                        <Ellipse x:Name="ToggleCircle"
                                                 Width="28" Height="28"
                                                 Fill="{DynamicResource ForegroundBrush}"
                                                 HorizontalAlignment="Left" Margin="2,2,0,2">
                                            <Ellipse.RenderTransform>
                                                <TranslateTransform x:Name="ToggleTransform" X="0"/>
                                            </Ellipse.RenderTransform>
                                            <Ellipse.Effect>
                                                <DropShadowEffect Color="{DynamicResource ShadowColor}" BlurRadius="8" ShadowDepth="1" Opacity="0.35"/>
                                            </Ellipse.Effect>
                                        </Ellipse>
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter TargetName="ToggleBackground" Property="Background" Value="{DynamicResource AccentBrush}"/>
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetName="ToggleTransform" Storyboard.TargetProperty="X" To="32" Duration="0:0:0.18"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetName="ToggleTransform" Storyboard.TargetProperty="X" To="0" Duration="0:0:0.18"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.ExitActions>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </CheckBox.Template>
                    </CheckBox>

                    <TextBlock Grid.Column="4"
                               VerticalAlignment="Center"
                               FontFamily="Consolas"
                               FontWeight="Bold">
                        <TextBlock.FontSize>
                            <Binding Source="{x:Static scaling:ScaleService.Instance}" Path="FontScale"
                                     Converter="{StaticResource MultiplyConverter}" ConverterParameter="12"/>
                        </TextBlock.FontSize>
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Text" Value="Enemy"/>
                                <Setter Property="Foreground" Value="{DynamicResource ForegroundSecondaryBrush}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ParentViewModel.Player4IsAlly}" Value="True">
                                        <Setter Property="Text" Value="Ally"/>
                                        <Setter Property="Foreground" Value="{DynamicResource AccentBrush}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>
            </Border>
        </StackPanel>
    </Grid>
</UserControl>