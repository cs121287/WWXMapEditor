<UserControl x:Class="WWXMapEditor.Views.MainMenuView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WWXMapEditor.Views"
             xmlns:scaling="clr-namespace:WWXMapEditor.UI.Scaling"
             xmlns:conv="clr-namespace:WWXMapEditor.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="1080" d:DesignWidth="1920"
             SnapsToDevicePixels="True"
             UseLayoutRounding="True"
             Loaded="UserControl_Loaded"
             MouseMove="UserControl_MouseMove"
             PreviewKeyDown="UserControl_PreviewKeyDown">

    <UserControl.Resources>
        <ResourceDictionary>

            <!-- Converter -->
            <conv:MultiplyConverter x:Key="MultiplyConverter"/>

            <!-- Derived brushes from theme for view-only visuals (no hardcoded colors) -->
            <SolidColorBrush x:Key="ScanlineLightBrush" Color="{DynamicResource LightBorderColor}" Opacity="0.125"/>
            <SolidColorBrush x:Key="DividerTopBrush" Color="{DynamicResource LightBorderColor}" Opacity="0.20"/>
            <SolidColorBrush x:Key="DividerBottomBrush" Color="{DynamicResource LightBorderColor}" Opacity="0.13"/>

            <!-- Assets: Opacity mask for torn slats, selection texture, and board overlays -->
            <ImageBrush x:Key="SlatOpacityMaskBrush"
                        ImageSource="pack://application:,,,/WWXMapEditor;component/Resources/Images/MainMenu/overlays/slat_mask.png"
                        Stretch="Fill"/>

            <!-- Tile the selection texture so it keeps a crisp grain at any size -->
            <ImageBrush x:Key="SelectionTextureBrush"
                        ImageSource="pack://application:,,,/WWXMapEditor;component/Resources/Images/MainMenu/overlays/selection_texture.png"
                        TileMode="Tile"
                        ViewportUnits="Absolute"
                        Viewport="0,0,24,24"
                        Stretch="Fill"/>

            <!-- Grunge slat button: uses theme resources only -->
            <Style x:Key="GrungeMenuButton" TargetType="Button" BasedOn="{StaticResource MenuButtonStyle}">
                <!-- Size with FontScale to match app-wide scaling -->
                <Setter Property="Width">
                    <Setter.Value>
                        <Binding Source="{x:Static scaling:ScaleService.Instance}" Path="FontScale" Converter="{StaticResource MultiplyConverter}" ConverterParameter="420"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Height">
                    <Setter.Value>
                        <Binding Source="{x:Static scaling:ScaleService.Instance}" Path="FontScale" Converter="{StaticResource MultiplyConverter}" ConverterParameter="52"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="FontSize">
                    <Setter.Value>
                        <Binding Source="{x:Static scaling:ScaleService.Instance}" Path="FontScale" Converter="{StaticResource MultiplyConverter}" ConverterParameter="16"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
                <Setter Property="Background" Value="{DynamicResource Surface3Brush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource LightBorderBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="18,6"/>
                <Setter Property="Margin" Value="0,8,0,8"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid>
                                <!-- Subtle slant -->
                                <Grid.RenderTransform>
                                    <SkewTransform AngleX="-6"/>
                                </Grid.RenderTransform>

                                <!-- Base slab with torn-edge mask -->
                                <Border x:Name="SlabBorder"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="0">
                                    <Border.OpacityMask>
                                        <StaticResource ResourceKey="SlatOpacityMaskBrush"/>
                                    </Border.OpacityMask>
                                    <Border.Effect>
                                        <DropShadowEffect BlurRadius="10" ShadowDepth="2" Direction="270" Color="{DynamicResource ShadowColor}" Opacity="0.45"/>
                                    </Border.Effect>
                                </Border>

                                <!-- Divider scratches -->
                                <Grid IsHitTestVisible="False">
                                    <Rectangle Height="1" VerticalAlignment="Top" Fill="{StaticResource DividerTopBrush}" Margin="12,6,12,0"/>
                                    <Rectangle Height="1" VerticalAlignment="Bottom" Fill="{StaticResource DividerBottomBrush}" Margin="12,0,12,6"/>
                                </Grid>

                                <!-- Textured pale-green selection fill that grows from left -->
                                <Grid x:Name="SelectFill" Opacity="0.0" ClipToBounds="True">
                                    <Grid.RenderTransform>
                                        <ScaleTransform x:Name="SelectScale" ScaleX="0" ScaleY="1"/>
                                    </Grid.RenderTransform>
                                    <Grid.RenderTransformOrigin>0,0.5</Grid.RenderTransformOrigin>

                                    <!-- Flat color base -->
                                    <Rectangle Fill="{DynamicResource MenuHighlightBrush}" Opacity="1"/>

                                    <!-- Tiled noise texture over it -->
                                    <Rectangle Fill="{StaticResource SelectionTextureBrush}" Opacity="0.35"/>
                                </Grid>

                                <!-- Pointer wedge on the right -->
                                <Path x:Name="PointerWedge"
                                      HorizontalAlignment="Right"
                                      VerticalAlignment="Center"
                                      Margin="8,0,8,0"
                                      Fill="{DynamicResource AccentBrush}"
                                      Stroke="{DynamicResource BorderBrush}"
                                      StrokeThickness="0.8"
                                      Data="M 0,0 L 12,6 L 0,12 Z"
                                      Opacity="0">
                                    <Path.RenderTransform>
                                        <TranslateTransform x:Name="WedgeTx" X="12" Y="0"/>
                                    </Path.RenderTransform>
                                </Path>

                                <!-- Content -->
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}"/>
                            </Grid>

                            <ControlTemplate.Triggers>
                                <!-- Hover/focus animate green bar + wedge -->
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="SelectFill" Property="Opacity" Value="1.0"/>
                                    <Setter TargetName="PointerWedge" Property="Opacity" Value="0.9"/>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="SelectScale"
                                                                 Storyboard.TargetProperty="ScaleX"
                                                                 To="1" Duration="0:0:0.12"/>
                                                <DoubleAnimation Storyboard.TargetName="WedgeTx"
                                                                 Storyboard.TargetProperty="X"
                                                                 To="0" Duration="0:0:0.12"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="SelectScale"
                                                                 Storyboard.TargetProperty="ScaleX"
                                                                 To="0" Duration="0:0:0.12"/>
                                                <DoubleAnimation Storyboard.TargetName="WedgeTx"
                                                                 Storyboard.TargetProperty="X"
                                                                 To="12" Duration="0:0:0.12"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>

                                <!-- Focused: keep border emphasis -->
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter TargetName="SlabBorder" Property="BorderBrush" Value="{DynamicResource LightBorderBrush}"/>
                                </Trigger>

                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="SlabBorder" Property="Background" Value="{DynamicResource PressedBrush}"/>
                                    <Setter TargetName="SlabBorder" Property="BorderBrush" Value="{DynamicResource LightBorderBrush}"/>
                                </Trigger>

                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.6"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Text styles -->
            <Style x:Key="HeadlineText" TargetType="TextBlock">
                <Setter Property="FontFamily" Value="Consolas"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect Color="{DynamicResource ShadowColor}" BlurRadius="10" ShadowDepth="2" Opacity="0.6"/>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="SubtitleText" TargetType="TextBlock">
                <Setter Property="FontFamily" Value="Consolas"/>
                <Setter Property="Foreground" Value="{DynamicResource ForegroundSecondaryBrush}"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="Opacity" Value="0.85"/>
                <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
            </Style>

            <!-- Animated transition storyboard for the left-side label -->
            <Storyboard x:Key="SideLabelChangeStoryboard">
                <DoubleAnimation Storyboard.TargetName="SideLabelText"
                                 Storyboard.TargetProperty="Opacity"
                                 From="0" To="1"
                                 Duration="0:0:0.18"/>
                <DoubleAnimation Storyboard.TargetName="SideLabelScale"
                                 Storyboard.TargetProperty="ScaleX"
                                 From="0.96" To="1"
                                 Duration="0:0:0.18"/>
                <DoubleAnimation Storyboard.TargetName="SideLabelScale"
                                 Storyboard.TargetProperty="ScaleY"
                                 From="0.96" To="1"
                                 Duration="0:0:0.18"/>
                <DoubleAnimation Storyboard.TargetName="SideLabelTx"
                                 Storyboard.TargetProperty="Y"
                                 From="6" To="0"
                                 Duration="0:0:0.18"/>
            </Storyboard>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <!-- BACKGROUND LAYERS (with parallax ONLY on the background) -->
        <Grid x:Name="BackgroundRoot">
            <Grid.RenderTransform>
                <TranslateTransform x:Name="BgParallax" X="0" Y="0"/>
            </Grid.RenderTransform>

            <!-- Fullscreen artwork -->
            <Image Source="pack://application:,,,/WWXMapEditor;component/Resources/Images/MainMenu/Background.png"
                   Stretch="UniformToFill"
                   RenderOptions.BitmapScalingMode="HighQuality"/>

            <!-- Dark vignette for readability -->
            <Rectangle>
                <Rectangle.Fill>
                    <RadialGradientBrush GradientOrigin="0.5,0.5" Center="0.5,0.5" RadiusX="0.95" RadiusY="0.95">
                        <GradientStop Color="#00000000" Offset="0.0"/>
                        <GradientStop Color="#D0000000" Offset="1.0"/>
                    </RadialGradientBrush>
                </Rectangle.Fill>
            </Rectangle>

            <!-- Gentle aurora overlay -->
            <Rectangle Opacity="0.30" IsHitTestVisible="False">
                <Rectangle.Fill>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                        <GradientStop x:Name="Aur1" Color="{DynamicResource Aurora1}" Offset="0"/>
                        <GradientStop x:Name="Aur2" Color="{DynamicResource Aurora2}" Offset="0.5"/>
                        <GradientStop x:Name="Aur3" Color="{DynamicResource Aurora3}" Offset="1"/>
                    </LinearGradientBrush>
                </Rectangle.Fill>
                <Rectangle.RenderTransform>
                    <TranslateTransform x:Name="AurMove" X="0" Y="0"/>
                </Rectangle.RenderTransform>
            </Rectangle>

            <!-- Subtle screen lines -->
            <Rectangle Opacity="0.05" IsHitTestVisible="False">
                <Rectangle.Fill>
                    <DrawingBrush TileMode="Tile" Viewport="0,0,3,3" ViewportUnits="Absolute">
                        <DrawingBrush.Drawing>
                            <DrawingGroup>
                                <GeometryDrawing Brush="#00000000" Geometry="M0,0 L3,0 L3,3 L0,3 Z"/>
                                <GeometryDrawing Brush="{StaticResource ScanlineLightBrush}" Geometry="M0,0 L3,0 L3,1 L0,1 Z"/>
                            </DrawingGroup>
                        </DrawingBrush.Drawing>
                    </DrawingBrush>
                </Rectangle.Fill>
            </Rectangle>

            <!-- Dust motes layer -->
            <Canvas IsHitTestVisible="False" Opacity="0.18">
                <Ellipse Width="3" Height="3" Fill="#FFFFFFFF" Canvas.Left="200" Canvas.Top="300">
                    <Ellipse.Triggers>
                        <EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard>
                                <Storyboard RepeatBehavior="Forever">
                                    <DoubleAnimation Storyboard.TargetProperty="(Canvas.Left)"
                                                     From="200" To="800" Duration="0:0:25" AutoReverse="True"/>
                                    <DoubleAnimation Storyboard.TargetProperty="(Canvas.Top)"
                                                     From="300" To="150" Duration="0:0:25" AutoReverse="True"/>
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                     From="0.1" To="0.5" Duration="0:0:6" AutoReverse="True"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Ellipse.Triggers>
                </Ellipse>
                <Ellipse Width="2" Height="2" Fill="#FFFFFFFF" Canvas.Left="900" Canvas.Top="700">
                    <Ellipse.Triggers>
                        <EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard>
                                <Storyboard RepeatBehavior="Forever">
                                    <DoubleAnimation Storyboard.TargetProperty="(Canvas.Left)"
                                                     From="900" To="1200" Duration="0:0:22" AutoReverse="True"/>
                                    <DoubleAnimation Storyboard.TargetProperty="(Canvas.Top)"
                                                     From="700" To="500" Duration="0:0:22" AutoReverse="True"/>
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                     From="0.1" To="0.4" Duration="0:0:5" AutoReverse="True"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Ellipse.Triggers>
                </Ellipse>
            </Canvas>
        </Grid>

        <!-- CONTENT (scrollable to avoid cutoff) -->
        <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="2*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <!-- Minimal title (top-left) -->
                <StackPanel Grid.Row="0" Grid.Column="0" Margin="28,24,0,0">
                    <TextBlock Style="{StaticResource HeadlineText}" Text="WWX MAP EDITOR">
                        <TextBlock.FontSize>
                            <Binding Source="{x:Static scaling:ScaleService.Instance}" Path="FontScale" Converter="{StaticResource MultiplyConverter}" ConverterParameter="28"/>
                        </TextBlock.FontSize>
                    </TextBlock>
                    <TextBlock Style="{StaticResource SubtitleText}" Text="Strategic Map Creation Tool" Margin="2,4,0,0">
                        <TextBlock.FontSize>
                            <Binding Source="{x:Static scaling:ScaleService.Instance}" Path="FontScale" Converter="{StaticResource MultiplyConverter}" ConverterParameter="13"/>
                        </TextBlock.FontSize>
                    </TextBlock>
                </StackPanel>

                <!-- Vertical dynamic label next to slats -->
                <Border Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" Background="#00000000" Margin="0,0,22,0">
                    <StackPanel>
                        <!-- Thin vertical rail with ticks -->
                        <Grid Height="{Binding Source={x:Static scaling:ScaleService.Instance}, Path=FontScale, Converter={StaticResource MultiplyConverter}, ConverterParameter=340}"
                              Width="6" Margin="0,0,0,8">
                            <Rectangle Fill="{DynamicResource Surface3Brush}"/>
                            <Rectangle Fill="{DynamicResource LightBorderBrush}" Width="1" HorizontalAlignment="Right" Margin="0,4,1,4"/>
                            <Rectangle Fill="{DynamicResource DividerStrongBrush}" Height="12" Width="2" HorizontalAlignment="Right" Margin="0,16,1,0" VerticalAlignment="Top"/>
                            <Rectangle Fill="{DynamicResource DividerSoftBrush}" Height="20" Width="2" HorizontalAlignment="Right" Margin="0,0,1,16" VerticalAlignment="Bottom"/>
                        </Grid>
                        <!-- Dynamic text: shows hovered button text, else "Main Menu" -->
                        <TextBlock x:Name="SideLabelText"
                                   Text="{Binding HoverLabelText, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                   Foreground="{DynamicResource ForegroundBrush}"
                                   Opacity="0.95"
                                   FontFamily="Consolas"
                                   FontWeight="Bold">
                            <TextBlock.LayoutTransform>
                                <RotateTransform Angle="-90"/>
                            </TextBlock.LayoutTransform>
                            <TextBlock.RenderTransform>
                                <TransformGroup>
                                    <TranslateTransform x:Name="SideLabelTx" Y="0"/>
                                    <ScaleTransform x:Name="SideLabelScale" ScaleX="1" ScaleY="1"/>
                                </TransformGroup>
                            </TextBlock.RenderTransform>
                            <TextBlock.FontSize>
                                <Binding Source="{x:Static scaling:ScaleService.Instance}" Path="FontScale" Converter="{StaticResource MultiplyConverter}" ConverterParameter="30"/>
                            </TextBlock.FontSize>
                            <TextBlock.Effect>
                                <DropShadowEffect Color="{DynamicResource ShadowColor}" BlurRadius="8" ShadowDepth="1" Opacity="0.7"/>
                            </TextBlock.Effect>
                        </TextBlock>
                    </StackPanel>
                </Border>

                <!-- Angled trapezoid board on the right -->
                <Grid x:Name="BoardContainer"
                      Grid.Row="1" Grid.Column="2"
                      HorizontalAlignment="Left" VerticalAlignment="Center"
                      Margin="16,24,24,24">
                    <Grid.RenderTransform>
                        <TransformGroup>
                            <RotateTransform Angle="-8"/>
                            <TranslateTransform x:Name="BoardSlideTx" X="100" Y="0"/>
                        </TransformGroup>
                    </Grid.RenderTransform>

                    <!-- Cache the board visuals for smoother animation -->
                    <Grid.CacheMode>
                        <BitmapCache/>
                    </Grid.CacheMode>

                    <!-- Board shape as trapezoid -->
                    <Grid>
                        <!-- Trapezoid path (normalized coords), stretched to container -->
                        <Viewbox Stretch="Fill" StretchDirection="Both">
                            <Grid Width="600" Height="420">
                                <Path x:Name="BoardPath"
                                      Stretch="Fill"
                                      Fill="{DynamicResource Surface3Brush}"
                                      Stroke="{DynamicResource LightBorderBrush}"
                                      StrokeThickness="1">
                                    <!-- Trapezoid: top narrower than bottom -->
                                    <Path.Data>
                                        <PathGeometry>
                                            <PathFigure StartPoint="60,0" IsClosed="True">
                                                <LineSegment Point="600,0"/>
                                                <LineSegment Point="540,420"/>
                                                <LineSegment Point="0,420"/>
                                            </PathFigure>
                                        </PathGeometry>
                                    </Path.Data>
                                    <Path.Effect>
                                        <DropShadowEffect BlurRadius="30" Direction="320" ShadowDepth="10" Color="{DynamicResource ShadowColor}" Opacity="0.8"/>
                                    </Path.Effect>
                                </Path>

                                <!-- Strong right-side shadow gradient -->
                                <Rectangle HorizontalAlignment="Right" Width="36" Height="420" IsHitTestVisible="False">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                            <GradientStop Color="{DynamicResource ShadowColor}" Offset="0.0"/>
                                            <GradientStop Color="#00000000" Offset="1.0"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>

                                <!-- Board overlays (scratches/splatters) -->
                                <Image Source="pack://application:,,,/WWXMapEditor;component/Resources/Images/MainMenu/overlays/scratches.png"
                                       Stretch="UniformToFill"
                                       Opacity="0.10"
                                       IsHitTestVisible="False"
                                       RenderOptions.BitmapScalingMode="HighQuality"/>
                                <Image Source="pack://application:,,,/WWXMapEditor;component/Resources/Images/MainMenu/overlays/splatters.png"
                                       Stretch="UniformToFill"
                                       Opacity="0.08"
                                       IsHitTestVisible="False"
                                       RenderOptions.BitmapScalingMode="HighQuality"/>
                            </Grid>
                        </Viewbox>

                        <!-- Stack of menu slats over the board -->
                        <StackPanel x:Name="MenuStack"
                                    Margin="36,36,48,36"
                                    VerticalAlignment="Center">
                            <!-- Each button gets events for hover -->
                            <Button Style="{StaticResource GrungeMenuButton}"
                                    Content="NEW MAP"
                                    x:Name="BtnNewMap"
                                    Command="{Binding DataContext.NavigateCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                    CommandParameter="NewMapCreation"
                                    MouseEnter="MenuButton_MouseEnter"
                                    MouseLeave="MenuButton_MouseLeave">
                                <Button.RenderTransform>
                                    <TranslateTransform x:Name="TxNewMap" X="60" Y="0"/>
                                </Button.RenderTransform>
                            </Button>

                            <Button Style="{StaticResource GrungeMenuButton}"
                                    Content="LOAD MAP"
                                    x:Name="BtnLoadMap"
                                    Command="{Binding DataContext.NavigateCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                    CommandParameter="LoadMap"
                                    MouseEnter="MenuButton_MouseEnter"
                                    MouseLeave="MenuButton_MouseLeave">
                                <Button.RenderTransform>
                                    <TranslateTransform x:Name="TxLoadMap" X="60" Y="0"/>
                                </Button.RenderTransform>
                            </Button>

                            <Button Style="{StaticResource GrungeMenuButton}"
                                    Content="SETTINGS"
                                    x:Name="BtnSettings"
                                    Command="{Binding DataContext.NavigateCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                    CommandParameter="Settings"
                                    MouseEnter="MenuButton_MouseEnter"
                                    MouseLeave="MenuButton_MouseLeave">
                                <Button.RenderTransform>
                                    <TranslateTransform x:Name="TxSettings" X="60" Y="0"/>
                                </Button.RenderTransform>
                            </Button>

                            <Button Style="{StaticResource GrungeMenuButton}"
                                    Content="ABOUT"
                                    x:Name="BtnAbout"
                                    Command="{Binding DataContext.NavigateCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                    CommandParameter="About"
                                    MouseEnter="MenuButton_MouseEnter"
                                    MouseLeave="MenuButton_MouseLeave">
                                <Button.RenderTransform>
                                    <TranslateTransform x:Name="TxAbout" X="60" Y="0"/>
                                </Button.RenderTransform>
                            </Button>

                            <Button Style="{StaticResource GrungeMenuButton}"
                                    Content="EXIT"
                                    x:Name="BtnExit"
                                    Command="{Binding DataContext.ExitCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                    MouseEnter="MenuButton_MouseEnter"
                                    MouseLeave="MenuButton_MouseLeave">
                                <Button.RenderTransform>
                                    <TranslateTransform x:Name="TxExit" X="60" Y="0"/>
                                </Button.RenderTransform>
                            </Button>
                        </StackPanel>
                    </Grid>
                </Grid>
            </Grid>
        </ScrollViewer>

        <!-- Continuous background motion -->
        <Grid.Triggers>
            <EventTrigger RoutedEvent="Loaded">
                <BeginStoryboard>
                    <Storyboard RepeatBehavior="Forever">
                        <!-- Aurora gentle drift -->
                        <DoubleAnimation Storyboard.TargetName="AurMove"
                                         Storyboard.TargetProperty="X"
                                         From="-40" To="40"
                                         Duration="0:0:45"
                                         AutoReverse="True"/>
                        <DoubleAnimation Storyboard.TargetName="AurMove"
                                         Storyboard.TargetProperty="Y"
                                         From="20" To="-20"
                                         Duration="0:1:00"
                                         AutoReverse="True"/>
                        <!-- Shift gradient midpoint slightly -->
                        <DoubleAnimation Storyboard.TargetName="Aur2"
                                         Storyboard.TargetProperty="Offset"
                                         From="0.45" To="0.55"
                                         Duration="0:0:18"
                                         AutoReverse="True"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

            <!-- Entrance + cascade: board slides in, then slats stagger -->
            <EventTrigger RoutedEvent="Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <!-- Board slide-in with slight overshoot -->
                        <DoubleAnimation Storyboard.TargetName="BoardSlideTx"
                                         Storyboard.TargetProperty="X"
                                         From="100" To="0"
                                         Duration="0:0:0.28">
                            <DoubleAnimation.EasingFunction>
                                <BackEase Amplitude="0.6" EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>

                        <!-- Slat cascade -->
                        <DoubleAnimation Storyboard.TargetName="TxNewMap"
                                         Storyboard.TargetProperty="X"
                                         From="60" To="0"
                                         BeginTime="0:0:0.10"
                                         Duration="0:0:0.18">
                            <DoubleAnimation.EasingFunction>
                                <QuadraticEase EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>

                        <DoubleAnimation Storyboard.TargetName="TxLoadMap"
                                         Storyboard.TargetProperty="X"
                                         From="60" To="0"
                                         BeginTime="0:0:0.16"
                                         Duration="0:0:0.18">
                            <DoubleAnimation.EasingFunction>
                                <QuadraticEase EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>

                        <DoubleAnimation Storyboard.TargetName="TxSettings"
                                         Storyboard.TargetProperty="X"
                                         From="60" To="0"
                                         BeginTime="0:0:0.22"
                                         Duration="0:0:0.18">
                            <DoubleAnimation.EasingFunction>
                                <QuadraticEase EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>

                        <DoubleAnimation Storyboard.TargetName="TxAbout"
                                         Storyboard.TargetProperty="X"
                                         From="60" To="0"
                                         BeginTime="0:0:0.28"
                                         Duration="0:0:0.18">
                            <DoubleAnimation.EasingFunction>
                                <QuadraticEase EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>

                        <DoubleAnimation Storyboard.TargetName="TxExit"
                                         Storyboard.TargetProperty="X"
                                         From="60" To="0"
                                         BeginTime="0:0:0.34"
                                         Duration="0:0:0.18">
                            <DoubleAnimation.EasingFunction>
                                <QuadraticEase EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Grid.Triggers>
    </Grid>
</UserControl>