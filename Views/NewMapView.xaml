<UserControl x:Class="WWXMapEditor.Views.NewMapView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WWXMapEditor.Views"
             xmlns:scaling="clr-namespace:WWXMapEditor.UI.Scaling"
             xmlns:conv="clr-namespace:WWXMapEditor.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="1080" d:DesignWidth="1920">

    <UserControl.Resources>
        <!-- Converters -->
        <BooleanToVisibilityConverter x:Key="LocalBoolToVisConverter"/>
        <conv:MultiplyConverter x:Key="MultiplyConverter"/>

        <!-- Derived local brushes to avoid hardcoded colors -->
        <SolidColorBrush x:Key="DividerTopBrush" Color="{DynamicResource LightBorderColor}" Opacity="0.20"/>
        <SolidColorBrush x:Key="DividerBottomBrush" Color="{DynamicResource LightBorderColor}" Opacity="0.13"/>
        <SolidColorBrush x:Key="ScanlineLightBrush" Color="{DynamicResource LightBorderColor}" Opacity="0.125"/>

        <!-- Fallback base style (so BasedOn resolves even if app-level doesn't define it) -->
        <Style x:Key="MenuButtonStyle" TargetType="Button"/>

        <!-- Assets used by the grunge button -->
        <ImageBrush x:Key="SlatOpacityMaskBrush"
                    ImageSource="pack://application:,,,/WWXMapEditor;component/Resources/Images/MainMenu/overlays/slat_mask.png"
                    Stretch="Fill"/>
        <ImageBrush x:Key="SelectionTextureBrush"
                    ImageSource="pack://application:,,,/WWXMapEditor;component/Resources/Images/MainMenu/overlays/selection_texture.png"
                    TileMode="Tile"
                    ViewportUnits="Absolute"
                    Viewport="0,0,24,24"
                    Stretch="Fill"/>

        <!-- Text styles to mirror Main Menu -->
        <Style x:Key="HeaderTitleText" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
        </Style>
        <Style x:Key="HeaderSubText" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundSecondaryBrush}"/>
            <Setter Property="Opacity" Value="0.9"/>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
        </Style>

        <!-- Main Menu button look (theme-aware) -->
        <Style x:Key="GrungeMenuButton" TargetType="Button" BasedOn="{StaticResource MenuButtonStyle}">
            <Setter Property="Width">
                <Setter.Value>
                    <Binding Source="{x:Static scaling:ScaleService.Instance}" Path="FontScale"
                             Converter="{StaticResource MultiplyConverter}" ConverterParameter="420"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Height">
                <Setter.Value>
                    <Binding Source="{x:Static scaling:ScaleService.Instance}" Path="FontScale"
                             Converter="{StaticResource MultiplyConverter}" ConverterParameter="52"/>
                </Setter.Value>
            </Setter>
            <Setter Property="FontSize">
                <Setter.Value>
                    <Binding Source="{x:Static scaling:ScaleService.Instance}" Path="FontScale"
                             Converter="{StaticResource MultiplyConverter}" ConverterParameter="16"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
            <Setter Property="Background" Value="{DynamicResource Surface3Brush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource LightBorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="18,6"/>
            <Setter Property="Margin" Value="0,8,0,8"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <!-- Subtle slant -->
                            <Grid.RenderTransform>
                                <SkewTransform AngleX="-6"/>
                            </Grid.RenderTransform>

                            <!-- Base slab with torn-edge mask -->
                            <Border x:Name="SlabBorder"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}">
                                <Border.OpacityMask>
                                    <StaticResource ResourceKey="SlatOpacityMaskBrush"/>
                                </Border.OpacityMask>
                                <Border.Effect>
                                    <DropShadowEffect BlurRadius="10" ShadowDepth="2" Direction="270" Color="{DynamicResource ShadowColor}" Opacity="0.45"/>
                                </Border.Effect>
                            </Border>

                            <!-- Divider scratches -->
                            <Grid IsHitTestVisible="False">
                                <Rectangle Height="1" VerticalAlignment="Top" Fill="{StaticResource DividerTopBrush}" Margin="12,6,12,0"/>
                                <Rectangle Height="1" VerticalAlignment="Bottom" Fill="{StaticResource DividerBottomBrush}" Margin="12,0,12,6"/>
                            </Grid>

                            <!-- Textured selection fill that grows from left -->
                            <Grid x:Name="SelectFill" Opacity="0.0" ClipToBounds="True">
                                <Grid.RenderTransform>
                                    <ScaleTransform x:Name="SelectScale" ScaleX="0" ScaleY="1"/>
                                </Grid.RenderTransform>
                                <Grid.RenderTransformOrigin>0,0.5</Grid.RenderTransformOrigin>
                                <Rectangle Fill="{DynamicResource MenuHighlightBrush}" Opacity="1"/>
                                <Rectangle Fill="{StaticResource SelectionTextureBrush}" Opacity="0.35"/>
                            </Grid>

                            <!-- Pointer wedge on the right -->
                            <Path x:Name="PointerWedge"
                                  HorizontalAlignment="Right"
                                  VerticalAlignment="Center"
                                  Margin="8,0,8,0"
                                  Fill="{DynamicResource AccentBrush}"
                                  Stroke="{DynamicResource BorderBrush}"
                                  StrokeThickness="0.8"
                                  Data="M 0,0 L 12,6 L 0,12 Z"
                                  Opacity="0">
                                <Path.RenderTransform>
                                    <TranslateTransform x:Name="WedgeTx" X="12" Y="0"/>
                                </Path.RenderTransform>
                            </Path>

                            <!-- Content -->
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"/>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="SelectFill" Property="Opacity" Value="1.0"/>
                                <Setter TargetName="PointerWedge" Property="Opacity" Value="0.9"/>
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="SelectScale"
                                                             Storyboard.TargetProperty="ScaleX"
                                                             To="1" Duration="0:0:0.12"/>
                                            <DoubleAnimation Storyboard.TargetName="WedgeTx"
                                                             Storyboard.TargetProperty="X"
                                                             To="0" Duration="0:0:0.12"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="SelectScale"
                                                             Storyboard.TargetProperty="ScaleX"
                                                             To="0" Duration="0:0:0.12"/>
                                            <DoubleAnimation Storyboard.TargetName="WedgeTx"
                                                             Storyboard.TargetProperty="X"
                                                             To="12" Duration="0:0:0.12"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>

                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter TargetName="SlabBorder" Property="BorderBrush" Value="{DynamicResource LightBorderBrush}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="SlabBorder" Property="Background" Value="{DynamicResource PressedBrush}"/>
                                <Setter TargetName="SlabBorder" Property="BorderBrush" Value="{DynamicResource LightBorderBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.6"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Entrance animation for the board -->
        <Storyboard x:Key="BoardEntrance">
            <DoubleAnimation Storyboard.TargetName="BoardSlideTx"
                             Storyboard.TargetProperty="X"
                             From="100" To="0"
                             Duration="0:0:0.28">
                <DoubleAnimation.EasingFunction>
                    <BackEase Amplitude="0.6" EasingMode="EaseOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>
    </UserControl.Resources>

    <Grid>
        <!-- BACKGROUND LAYERS (like Main Menu) -->
        <Grid x:Name="BackgroundRoot">
            <Grid.RenderTransform>
                <TranslateTransform x:Name="BgParallax" X="0" Y="0"/>
            </Grid.RenderTransform>

            <!-- Fullscreen artwork -->
            <Image Source="pack://application:,,,/WWXMapEditor;component/Resources/Images/MainMenu/Background.png"
                   Stretch="UniformToFill"
                   RenderOptions.BitmapScalingMode="HighQuality"/>

            <!-- Dark vignette -->
            <Rectangle>
                <Rectangle.Fill>
                    <RadialGradientBrush GradientOrigin="0.5,0.5" Center="0.5,0.5" RadiusX="0.95" RadiusY="0.95">
                        <GradientStop Color="#00000000" Offset="0.0"/>
                        <GradientStop Color="#D0000000" Offset="1.0"/>
                    </RadialGradientBrush>
                </Rectangle.Fill>
            </Rectangle>

            <!-- Gentle aurora overlay -->
            <Rectangle Opacity="0.30" IsHitTestVisible="False">
                <Rectangle.Fill>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                        <GradientStop x:Name="Aur1" Color="{DynamicResource Aurora1}" Offset="0"/>
                        <GradientStop x:Name="Aur2" Color="{DynamicResource Aurora2}" Offset="0.5"/>
                        <GradientStop x:Name="Aur3" Color="{DynamicResource Aurora3}" Offset="1"/>
                    </LinearGradientBrush>
                </Rectangle.Fill>
                <Rectangle.RenderTransform>
                    <TranslateTransform x:Name="AurMove" X="0" Y="0"/>
                </Rectangle.RenderTransform>
            </Rectangle>

            <!-- Subtle scanlines -->
            <Rectangle Opacity="0.05" IsHitTestVisible="False">
                <Rectangle.Fill>
                    <DrawingBrush TileMode="Tile" Viewport="0,0,3,3" ViewportUnits="Absolute">
                        <DrawingBrush.Drawing>
                            <DrawingGroup>
                                <GeometryDrawing Brush="#00000000" Geometry="M0,0 L3,0 L3,3 L0,3 Z"/>
                                <GeometryDrawing Brush="{StaticResource ScanlineLightBrush}" Geometry="M0,0 L3,0 L3,1 L0,1 Z"/>
                            </DrawingGroup>
                        </DrawingBrush.Drawing>
                    </DrawingBrush>
                </Rectangle.Fill>
            </Rectangle>

            <!-- Dust motes -->
            <Canvas IsHitTestVisible="False" Opacity="0.18">
                <Ellipse Width="3" Height="3" Fill="{DynamicResource LightBorderBrush}" Canvas.Left="200" Canvas.Top="300">
                    <Ellipse.Triggers>
                        <EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard>
                                <Storyboard RepeatBehavior="Forever">
                                    <DoubleAnimation Storyboard.TargetProperty="(Canvas.Left)"
                                                     From="200" To="800" Duration="0:0:25" AutoReverse="True"/>
                                    <DoubleAnimation Storyboard.TargetProperty="(Canvas.Top)"
                                                     From="300" To="150" Duration="0:0:25" AutoReverse="True"/>
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                     From="0.1" To="0.5" Duration="0:0:6" AutoReverse="True"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Ellipse.Triggers>
                </Ellipse>
                <Ellipse Width="2" Height="2" Fill="{DynamicResource LightBorderBrush}" Canvas.Left="900" Canvas.Top="700">
                    <Ellipse.Triggers>
                        <EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard>
                                <Storyboard RepeatBehavior="Forever">
                                    <DoubleAnimation Storyboard.TargetProperty="(Canvas.Left)"
                                                     From="900" To="1200" Duration="0:0:22" AutoReverse="True"/>
                                    <DoubleAnimation Storyboard.TargetProperty="(Canvas.Top)"
                                                     From="700" To="500" Duration="0:0:22" AutoReverse="True"/>
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                     From="0.1" To="0.4" Duration="0:0:5" AutoReverse="True"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Ellipse.Triggers>
                </Ellipse>
            </Canvas>
        </Grid>

        <!-- FOREGROUND -->
        <DockPanel LastChildFill="True">
            <!-- Header (title and subtitle only) -->
            <Border DockPanel.Dock="Top"
                    Background="#00000000"
                    Padding="28,24,28,12">
                <StackPanel>
                    <TextBlock Text="CREATE NEW MAP"
                               Style="{StaticResource HeaderTitleText}">
                        <TextBlock.FontSize>
                            <Binding Source="{x:Static scaling:ScaleService.Instance}" Path="FontScale"
                                     Converter="{StaticResource MultiplyConverter}" ConverterParameter="28"/>
                        </TextBlock.FontSize>
                        <TextBlock.Effect>
                            <DropShadowEffect Color="{DynamicResource ShadowColor}" BlurRadius="10" ShadowDepth="2" Opacity="0.6"/>
                        </TextBlock.Effect>
                    </TextBlock>
                    <TextBlock Text="Design your battlefield with custom settings and victory conditions"
                               Style="{StaticResource HeaderSubText}"
                               Margin="2,4,0,0">
                        <TextBlock.FontSize>
                            <Binding Source="{x:Static scaling:ScaleService.Instance}" Path="FontScale"
                                     Converter="{StaticResource MultiplyConverter}" ConverterParameter="14"/>
                        </TextBlock.FontSize>
                    </TextBlock>
                </StackPanel>
            </Border>

            <!-- Footer with navigation buttons and step counter -->
            <!-- IMPORTANT: Footer must come BEFORE the content in the DockPanel to ensure it docks at the bottom -->
            <Grid DockPanel.Dock="Bottom" Margin="28,0,28,20">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Center">
                    <Button Content="← RETURN TO MAIN MENU"
                            Style="{StaticResource GrungeMenuButton}"
                            Width="{Binding Source={x:Static scaling:ScaleService.Instance}, Path=FontScale, Converter={StaticResource MultiplyConverter}, ConverterParameter=260}"
                            Height="{Binding Source={x:Static scaling:ScaleService.Instance}, Path=FontScale, Converter={StaticResource MultiplyConverter}, ConverterParameter=44}"
                            FontSize="{Binding Source={x:Static scaling:ScaleService.Instance}, Path=FontScale, Converter={StaticResource MultiplyConverter}, ConverterParameter=16}"
                            Command="{Binding CancelCommand}"/>

                    <Border Background="{DynamicResource Surface2Brush}"
                            CornerRadius="20"
                            Padding="15,8"
                            Margin="18,0,0,0">
                        <TextBlock Text="{Binding ProgressText}"
                                   Foreground="{DynamicResource ForegroundBrush}"
                                   FontFamily="Consolas"
                                   FontWeight="Bold">
                            <TextBlock.FontSize>
                                <Binding Source="{x:Static scaling:ScaleService.Instance}" Path="FontScale"
                                         Converter="{StaticResource MultiplyConverter}" ConverterParameter="13"/>
                            </TextBlock.FontSize>
                        </TextBlock>
                    </Border>
                </StackPanel>

                <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button Content="← PREVIOUS"
                            Style="{StaticResource GrungeMenuButton}"
                            Width="{Binding Source={x:Static scaling:ScaleService.Instance}, Path=FontScale, Converter={StaticResource MultiplyConverter}, ConverterParameter=200}"
                            Height="{Binding Source={x:Static scaling:ScaleService.Instance}, Path=FontScale, Converter={StaticResource MultiplyConverter}, ConverterParameter=44}"
                            FontSize="{Binding Source={x:Static scaling:ScaleService.Instance}, Path=FontScale, Converter={StaticResource MultiplyConverter}, ConverterParameter=16}"
                            Command="{Binding PreviousCommand}"
                            Visibility="{Binding PreviousButtonVisibility}"
                            Margin="0,0,10,0"/>

                        <!-- Next/Create button with special gradient when creating -->
                        <Button x:Name="NextButton"
                            Content="{Binding NextButtonText}"
                            Command="{Binding NextCommand}"
                            Width="{Binding Source={x:Static scaling:ScaleService.Instance}, Path=FontScale, Converter={StaticResource MultiplyConverter}, ConverterParameter=220}"
                            Height="{Binding Source={x:Static scaling:ScaleService.Instance}, Path=FontScale, Converter={StaticResource MultiplyConverter}, ConverterParameter=44}">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource GrungeMenuButton}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding NextButtonText}" Value="CREATE MAP">
                                            <Setter Property="Background" Value="{DynamicResource SuccessGradientBrush}"/>
                                            <Setter Property="BorderBrush" Value="{DynamicResource LightBorderBrush}"/>
                                            <Setter Property="FontWeight" Value="Bold"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                </StackPanel>
            </Grid>

            <!-- CONTENT AREA on an angled trapezoid board like Main Menu -->
            <Grid Margin="16,12,16,12">
                <Grid HorizontalAlignment="Left" VerticalAlignment="Center" Margin="16,16,16,16">
                    <Grid.RenderTransform>
                        <TransformGroup>
                            <RotateTransform Angle="-6"/>
                            <TranslateTransform x:Name="BoardSlideTx" X="100" Y="0"/>
                        </TransformGroup>
                    </Grid.RenderTransform>

                    <Grid.CacheMode>
                        <BitmapCache/>
                    </Grid.CacheMode>

                    <!-- Board visuals -->
                    <Viewbox Stretch="Fill" StretchDirection="Both">
                        <Grid Width="1400" Height="800">
                            <Path Stretch="Fill"
                                  Fill="{DynamicResource Surface3Brush}"
                                  Stroke="{DynamicResource LightBorderBrush}"
                                  StrokeThickness="1">
                                <Path.Data>
                                    <PathGeometry>
                                        <PathFigure StartPoint="100,0" IsClosed="True">
                                            <LineSegment Point="1400,0"/>
                                            <LineSegment Point="1300,800"/>
                                            <LineSegment Point="0,800"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Path.Data>
                                <Path.Effect>
                                    <DropShadowEffect BlurRadius="30" Direction="320" ShadowDepth="10" Color="{DynamicResource ShadowColor}" Opacity="0.8"/>
                                </Path.Effect>
                            </Path>

                            <!-- Right-side shadow gradient -->
                            <Rectangle HorizontalAlignment="Right" Width="44" Height="800" IsHitTestVisible="False">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                        <GradientStop Color="{DynamicResource ShadowColor}" Offset="0.0"/>
                                        <GradientStop Color="#00000000" Offset="1.0"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>

                            <!-- Board overlays -->
                            <Image Source="pack://application:,,,/WWXMapEditor;component/Resources/Images/MainMenu/overlays/scratches.png"
                                   Stretch="UniformToFill"
                                   Opacity="0.10"
                                   IsHitTestVisible="False"
                                   RenderOptions.BitmapScalingMode="HighQuality"/>
                            <Image Source="pack://application:,,,/WWXMapEditor;component/Resources/Images/MainMenu/overlays/splatters.png"
                                   Stretch="UniformToFill"
                                   Opacity="0.08"
                                   IsHitTestVisible="False"
                                   RenderOptions.BitmapScalingMode="HighQuality"/>
                        </Grid>
                    </Viewbox>

                    <!-- Content atop the board -->
                    <Grid Margin="64,52,72,52">
                        <!-- Only step content and validation (navigation moved to footer) -->
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <!-- Step content with scroll -->
                        <Border Grid.Row="0" Background="#00000000" Margin="0,4,0,0">
                            <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                                <ContentControl x:Name="StepContentControl"
                                                Content="{Binding CurrentStepContent}"
                                                HorizontalAlignment="Stretch"
                                                VerticalAlignment="Stretch"
                                                Margin="8"/>
                            </ScrollViewer>
                        </Border>

                        <!-- Validation message (themed) -->
                        <Border Grid.Row="1"
                                x:Name="ValidationMessageBorder"
                                Margin="0,10,0,0"
                                Padding="20,15"
                                CornerRadius="8"
                                HorizontalAlignment="Center"
                                MinWidth="400"
                                Background="{DynamicResource DangerGradientBrush}">
                            <Border.Effect>
                                <DropShadowEffect Color="{DynamicResource ShadowColor}" Direction="270" ShadowDepth="5" Opacity="0.3" BlurRadius="10"/>
                            </Border.Effect>
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=ValidationMessage, Converter={StaticResource StringToVisibilityConverter}}" Value="Visible">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0"
                                           Text="⚠"
                                           Foreground="White"
                                           FontFamily="Segoe UI"
                                           Margin="0,0,15,0"
                                           VerticalAlignment="Center">
                                    <TextBlock.FontSize>
                                        <Binding Source="{x:Static scaling:ScaleService.Instance}" Path="FontScale"
                                                 Converter="{StaticResource MultiplyConverter}" ConverterParameter="24"/>
                                    </TextBlock.FontSize>
                                </TextBlock>
                                <TextBlock Grid.Column="1"
                                           Text="{Binding ValidationMessage}"
                                           Foreground="White"
                                           FontFamily="Consolas"
                                           TextWrapping="Wrap"
                                           VerticalAlignment="Center">
                                    <TextBlock.FontSize>
                                        <Binding Source="{x:Static scaling:ScaleService.Instance}" Path="FontScale"
                                                 Converter="{StaticResource MultiplyConverter}" ConverterParameter="14"/>
                                    </TextBlock.FontSize>
                                </TextBlock>
                                <Button Grid.Column="2"
                                        Width="24" Height="24"
                                        Background="Transparent"
                                        BorderThickness="0"
                                        Cursor="Hand"
                                        Command="{Binding ClearValidationMessageCommand}">
                                    <TextBlock Text="✕"
                                               Foreground="White"
                                               FontFamily="Segoe UI">
                                        <TextBlock.FontSize>
                                            <Binding Source="{x:Static scaling:ScaleService.Instance}" Path="FontScale"
                                                     Converter="{StaticResource MultiplyConverter}" ConverterParameter="14"/>
                                        </TextBlock.FontSize>
                                    </TextBlock>
                                </Button>
                            </Grid>
                        </Border>
                    </Grid>
                </Grid>
            </Grid>
        </DockPanel>

        <!-- Background motion animations -->
        <Grid.Triggers>
            <EventTrigger RoutedEvent="Loaded">
                <BeginStoryboard>
                    <Storyboard RepeatBehavior="Forever">
                        <!-- Aurora drift -->
                        <DoubleAnimation Storyboard.TargetName="AurMove"
                                         Storyboard.TargetProperty="X"
                                         From="-40" To="40"
                                         Duration="0:0:45"
                                         AutoReverse="True"/>
                        <DoubleAnimation Storyboard.TargetName="AurMove"
                                         Storyboard.TargetProperty="Y"
                                         From="18" To="-18"
                                         Duration="0:1:00"
                                         AutoReverse="True"/>
                        <!-- Slight midpoint shift -->
                        <DoubleAnimation Storyboard.TargetName="Aur2"
                                         Storyboard.TargetProperty="Offset"
                                         From="0.45" To="0.55"
                                         Duration="0:0:18"
                                         AutoReverse="True"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

            <!-- Board entrance -->
            <EventTrigger RoutedEvent="Loaded">
                <BeginStoryboard Storyboard="{StaticResource BoardEntrance}"/>
            </EventTrigger>
        </Grid.Triggers>
    </Grid>
</UserControl>